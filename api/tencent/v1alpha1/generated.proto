/*
Copyright 2022 The kubeall.com Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kube_all.public_cloud.api.tencent.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/kube-all/public-cloud/api/tencent/v1alpha1";

// TencentCluster is the schema for the clusters API
message TencentCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TencentClusterSpec spec = 2;

  optional TencentClusterStatus status = 3;
}

message TencentClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated TencentCluster items = 2;
}

message TencentClusterSpec {
  // +kubebuilder:validation:Required
  // +kubebuilder:validation:Enum=Kubernetes;ManagedKubernetes;Ask
  optional string cluster_type = 1;
}

message TencentClusterStatus {
  // cluster id
  // +optional
  optional string cluster_id = 1;

  // cluster kubeconfig
  // +optional
  optional string config = 2;

  // kubeconfig expire time, format:RFC3339 UTC
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expiration = 3;
}

